name: Branch Protection

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  enforce-branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Check if push is direct to main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Push event detected to main branch."
          echo "Actor: ${{ github.actor }}"
          echo "Commit: ${{ github.sha }}"
          echo "Repository: ${{ github.repository }}"
          echo "Timestamp: $(date)"
          
          # Allow the repository owner to push directly to main
          if [ "${{ github.actor }}" == "MarianStelianCraciun" ]; then
            echo "[SUCCESS] Repository owner detected. Allowing direct push to main branch."
          else
            echo "[ERROR] Direct pushes to main branch are not allowed!"
            echo "[ERROR] User '${{ github.actor }}' is not authorized for direct pushes."
            echo "[ERROR] Please create a pull request instead."
            exit 1
          fi
          
      - name: Checkout code
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        
      - name: Check for required approval
        if: github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ github.token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
          REQUIRED_APPROVER: "MarianStelianCraciun"  # Replace with the actual username
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
        run: |
          echo "Pull request to main branch detected."
          
          # Skip approval check if the PR author is the required approver
          if [ "$PR_AUTHOR" == "$REQUIRED_APPROVER" ]; then
            echo "[SUCCESS] Pull request author is $REQUIRED_APPROVER. Approval check skipped."
            echo "[SUCCESS] This PR can be merged to the main branch."
            exit 0
          fi
 
          
          echo "Checking for required approval from $REQUIRED_APPROVER..."
          
          # Get the list of reviews for this PR
          REVIEWS=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER/reviews")
          
          # Check if the required approver has approved the PR
          APPROVED=$(echo $REVIEWS | jq -r --arg APPROVER "$REQUIRED_APPROVER" '.[] | select(.user.login==$APPROVER and .state=="APPROVED") | .state')
          
          if [ "$APPROVED" == "APPROVED" ]; then
            echo "[SUCCESS] Pull request has been approved by $REQUIRED_APPROVER."
            echo "[SUCCESS] This PR can be merged to the main branch."
          else
            echo "[ERROR] Pull request has NOT been approved by $REQUIRED_APPROVER."
            echo "[ERROR] This PR cannot be merged until it receives approval from $REQUIRED_APPROVER."
            exit 1
          fi
